name: Lean 4 CI

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch and "v4*" branches
  push:
    branches:
      - main
      - 'v4*'
    paths:
      - 'lean4/**'
  pull_request:
    branches:
      - main
      - 'v4*'
    paths:
      - 'lean4/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # This workflow contains a single job called "lean4"
  lean4:
    name: Lean 4 Examples
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    steps:
      - name: install elan on Ubuntu and macOS
        if: matrix.os != 'windows-latest'
        run: |
          set -o pipefail
          curl https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh -sSf | bash -s -- -y
          echo "$HOME/.elan/bin" >> $GITHUB_PATH
      - name: install elan on Windows
        if: matrix.os == 'windows-latest'
        run: |
          curl -O --location https://raw.githubusercontent.com/leanprover/elan/master/elan-init.ps1
          .\elan-init.ps1 -NoPrompt 1 -DefaultToolchain none
          echo "$HOME\.elan\bin" >> $env:GITHUB_PATH
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          # cache: 'pip' # caching pip dependencies
      - name: check examples
        # working-directory: ./lean4
        # uses: leanprover/lean-action@v1-alpha
        run: |
          cd lean4
          lake exe cache get
          lake test
      - name: annotate examples
        # annotation is enabled conditionally
        if: >-
          matrix.os == 'ubuntu-latest' && (
            startsWith(github.ref, 'refs/heads/v4') ||
            contains(github.event.head_commit.message, '[annotate]')
          )
        run: |
          cd lean4
          ./install_deps.sh
          ./annotate_all.sh
          # lake env leanInk analyze examples/Help.lean
      - name: Upload artifact
        # Github Pages deployment is enabled conditionally
        if: >-
          matrix.os == 'ubuntu-latest' && (
            startsWith(github.ref, 'refs/heads/v4') ||
            contains(github.event.head_commit.message, '[annotate]')
          )
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./lean4/dist
      - name: Try mk_all
        shell: bash
        run: |
          cd lean4
          rm -f .lake/packages/mathlib/lakefile.lean
          mv lakefile-for-mathlib.lean .lake/packages/mathlib/lakefile.lean
          lake -R exe mk_all || true
          

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
      fail-fast: false
    needs: lean4
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        # Github Pages deployment is enabled conditionally
        if: >-
          matrix.os == 'ubuntu-latest' && (
            startsWith(github.ref, 'refs/heads/v4') ||
            contains(github.event.head_commit.message, '[annotate]')
          )
        uses: actions/deploy-pages@v4
